CREATE COMPUTE MODULE Convert_char_Compute2
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		DECLARE I INTEGER 1;
		
		FOR LRef AS InputLocalEnvironment.DFDL.InputCSV.record[] DO
			FOR IRef AS InputRoot.XMLNSC. 




          
          
            SET OutputRoot.DFDL.OutputCSV.record[i].ID         = Ref.ID;	
			SET OutputRoot.DFDL.OutputCSV.record[i].ROW_ID     = Ref.ROW_ID;	
			SET OutputRoot.DFDL.OutputCSV.record[i].EXTERNALID = Ref.EXTERNALID;	
			SET OutputRoot.DFDL.OutputCSV.record[i].STORETIME  = Ref.STORETIME;	
			SET OutputRoot.DFDL.OutputCSV.record[i].OU         = Ref.OU;	
			SET OutputRoot.DFDL.OutputCSV.record[i].ROUTINGREQ = Ref.ROUTINGREQ;	
			SET OutputRoot.DFDL.OutputCSV.record[i].MQHEADERENC = Ref.MQHEADERENC;
			SET OutputRoot.DFDL.OutputCSV.record[i].MSGTYPE    = Ref.MSGTYPE;
			SET OutputRoot.DFDL.OutputCSV.record[i].DIRECTION  = Ref.DIRECTION;
			SET OutputRoot.DFDL.OutputCSV.record[i].QUEUETYPE  = Ref.QUEUETYPE;
			SET OutputRoot.DFDL.OutputCSV.record[i].LOCKTIME   = Ref.LOCKTIME;
			SET OutputRoot.DFDL.OutputCSV.record[i].POSSIBLEDUPLICATE = Ref.POSSIBLEDUPLICATE;
            SET OutputRoot.DFDL.OutputCSV.record[i].MQHEADER    = Ref.MQHEADER;
            SET OutputRoot.DFDL.OutputCSV.record[i].COMIBMDNI   = Ref.COMIBMDNI;
            SET OutputRoot.DFDL.OutputCSV.record[i].PAYLOAD     = Ref.PAYLOAD;
            SET OutputRoot.DFDL.OutputCSV.record[i].MSGDOMAIN   = Ref.MSGDOMAIN;
			SET OutputRoot.DFDL.OutputCSV.record[i].QUEUE       = Ref.QUEUE;
			SET OutputRoot.DFDL.OutputCSV.record[i].LOCALADDRESS = Ref.LOCALADDRESS;
			SET OutputRoot.DFDL.OutputCSV.record[i].REMOTEADDRESS = Ref.REMOTEADDRESS;
			SET OutputRoot.DFDL.OutputCSV.record[i].LOCKUSER    = Ref.LOCKUSER;
			SET OutputRoot.DFDL.OutputCSV.record[i].LASTCHGUSER = Ref.LASTCHGUSER;
			SET OutputRoot.DFDL.OutputCSV.record[1].MTFIN       = Ref.MTFIN;
--			
--		END FOR;
		
		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;