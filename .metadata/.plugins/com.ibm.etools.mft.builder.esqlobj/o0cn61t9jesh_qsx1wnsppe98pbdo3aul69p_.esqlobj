CREATE COMPUTE MODULE csv_Compute1
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		DECLARE i INTEGER 1;
    	FOR source AS InputLocalEnvironment.Destination.details.DFDL.File.record[] DO
    	FOR source AS InputLocalEnvironment.Destination.File.DFDL.File1.record[] DO
    	
    	DECLARE USR REFERENCE TO InputLocalEnvironment.Destination.details.DFDL.File.record.USR_ID;
        DECLARE USR1 REFERENCE TO InputLocalEnvironment.Destination.File.DFDL.File1.record.USR_ID;
        
    If  USR = USR1 then
    SET OutputRoot.DFDL.FileOutput.record[i].field1       = InputLocalEnvironment.Destination.details.DFDL.File.record[i].USR_ID;
    SET OutputRoot.DFDL.FileOutput.record[i].field2       = InputLocalEnvironment.Destination.details.DFDL.File.record[i].EMAIL_ID;
    SET OutputRoot.DFDL.FileOutput.record[i].field3        = InputLocalEnvironment.Destination.File.DFDL.File1.record[i].USR_AUTH_STATUS;
    SET OutputRoot.DFDL.FileOutput.record[i].field4         = InputLocalEnvironment.Destination.File.DFDL.File1.record[i].RO_NAME;
    SET OutputRoot.DFDL.FileOutput.record[i].field5         = InputLocalEnvironment.Destination.File.DFDL.File1.record[i].OU_NAME;
    SET OutputRoot.DFDL.FileOutput.record[i].field6         = InputLocalEnvironment.Destination.File.DFDL.File1.record[i].USR_COMMITTED_BY;
    SET OutputRoot.DFDL.FileOutput.record[i].field7         = InputLocalEnvironment.Destination.File.DFDL.File1.record[i].USR_COMMITTED_ON;
    SET OutputRoot.DFDL.FileOutput.record[i].field8         = InputLocalEnvironment.Destination.File.DFDL.File1.record[i].USR_APPROVED_BY;
    SET OutputRoot.DFDL.FileOutput.record[i].field9         = InputLocalEnvironment.Destination.File.DFDL.File1.record[i].USR_APPROVED_ON;
    
    END IF ;
    
    SET i=i+1;
   END FOR;
  END FOR;
		
		
		
		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;