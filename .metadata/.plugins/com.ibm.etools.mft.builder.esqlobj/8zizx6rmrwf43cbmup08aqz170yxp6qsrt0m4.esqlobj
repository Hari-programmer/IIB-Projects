/*EATE FUNCTION main() RETURNS BOOLE*/ BEGIN
SET OutputRoot = InputRoot;
/* For case  IF Environment.ComIbmDni.ConfigDataLoc = 'env' */
SET OutputLocalEnvironment = InputLocalEnvironment;


/*-----------------------------------------------------------------------------------------------------------*\
  This node checks if the incoming DniSetTimer request message inherits all mandatory fields with valid values. 
  If fields are missing or does have invalid values, a DniSetTimer response message will be created with
  completion code 'Failed' and a reason code, witch describes the error.
\*-----------------------------------------------------------------------------------------------------------*/

-------------------------------------------------------------------------------------------------------------
-- declaration and initialization for mandatory parameter checking 
-------------------------------------------------------------------------------------------------------------
DECLARE refDni REFERENCE TO InputRoot.MQRFH2[<].ComIbmDni;
DECLARE refTimReq REFERENCE TO refDni.Function.DniTimer."Set".Request;
CREATE FIELD OutputLocalEnvironment.Variables.ComIbmDni.Function.DniTimer."Set";
DECLARE refLocEnvOut REFERENCE TO OutputLocalEnvironment.Variables.ComIbmDni.Function.DniTimer."Set";
DECLARE pOutFunction REFERENCE TO OutputRoot.MQRFH2[<].ComIbmDni.Function;

IF Environment.ComIbmDni.ConfigDataLoc = 'env'
THEN 
   MOVE refTimReq    TO InputLocalEnvironment.ComIbmDni.Function.DniTimer."Set".Request;
   MOVE pOutFunction TO OutputLocalEnvironment.ComIbmDni.Function;
END IF;

DECLARE chOu CHARACTER;
DECLARE chTargetSvc CHARACTER; 
DECLARE chTimerCat CHARACTER;
DECLARE chWuIntvl CHARACTER;
DECLARE chWuTime CHARACTER;
DECLARE chUserData CHARACTER;

SET chOu = refDni.OU;
SET chTargetSvc = refTimReq.TargetService;
SET chTimerCat = refTimReq.Category;
SET chWuIntvl = refTimReq.WakeupInterval;
SET chWuTime = refTimReq.WakeupDateTime;
SET chUserData = refTimReq.UserData;


------------------------------------------------------------------------------------------------------------
-- Creates the response section in the DniSetTimer Function. If an mandatory parameter is wrong, a negative
-- response will be added to this section. Else, this section will be removed at end of processing in this
-- node.
------------------------------------------------------------------------------------------------------------
CREATE FIELD pOutFunction.DniTimer."Set".Response;
DECLARE refResp REFERENCE TO pOutFunction.DniTimer."Set".Response;

-- flag for finding out, if response entries was made ------------------------------------------------------
DECLARE boolRespSet BOOLEAN;
SET boolRespSet = FALSE;


------------------------------------------------------------------------------------------------------------
-- Checking of all mandatory parameters and its values.
-- please note: the parameter 'Category' will be checked in node 'SetTimerData' 
------------------------------------------------------------------------------------------------------------

-- Check, if TargetService element is given and valid ------------------------------------------------------
IF (chTargetSvc IS NULL) THEN
  SET refResp.Completion.Code = 'Failed';
  SET refResp.Completion.Reason = '1';
  SET refResp.Completion.Parameter1 = 'TargetService';
  SET boolRespSet = TRUE;
ELSE
  IF (LENGTH(chTargetSvc) = 0) THEN
    SET refResp.Completion.Code = 'Failed';
    SET refResp.Completion.Reason = '2';
    SET refResp.Completion.Parameter1 = 'TargetService';
    SET boolRespSet = TRUE;
  ELSE
    IF (LENGTH(chTargetSvc) > 30) THEN
      SET refResp.Completion.Code = 'Failed';
      SET refResp.Completion.Reason = '3';
      SET refResp.Completion.Parameter1 = 'TargetService';
      SET refResp.Completion.Parameter2 = chTargetSvc;
      SET refResp.Completion.Parameter3 = 30;
      SET refResp.Completion.Parameter3.(NameValue)dt = 'i2';
      SET refResp.Completion.Parameter4 = LENGTH(chTargetSvc);
      SET refResp.Completion.Parameter4.(NameValue)dt = 'i2';
      SET boolRespSet = TRUE;
    END IF;
  END IF;
END IF;



-- Check the existence of either element WakeupDateTime or element WakeupInterval ---------------------------
-- Check if the given element of both is valid. -------------------------------------------------------------
IF (boolRespSet = FALSE) THEN
  IF ((chWuIntvl IS NULL) AND (chWuTime IS NULL)) THEN
    SET refResp.Completion.Code = 'Failed';
    SET refResp.Completion.Reason = '4';
    SET boolRespSet = TRUE;
  ELSE
    IF ((chWuIntvl IS NOT NULL) AND (chWuTime IS NOT NULL)) THEN 
      SET refResp.Completion.Code = 'Failed';
      SET refResp.Completion.Reason = '5';
      SET boolRespSet = TRUE;
    ELSE
      IF (chWuIntvl IS NOT NULL) THEN 
        IF (LENGTH(chWuIntvl) <> 12) THEN
          SET refResp.Completion.Code = 'Failed';
          SET refResp.Completion.Reason = '6';
	  SET refResp.Completion.Parameter1 = 'WakeupInterval';
          SET refResp.Completion.Parameter2 = chWuIntvl;
          SET refResp.Completion.Parameter3 = 12;
          SET refResp.Completion.Parameter3.(NameValue)dt = 'i2';
          SET refResp.Completion.Parameter4 = LENGTH(chWuIntvl); 
          SET refResp.Completion.Parameter4.(NameValue)dt = 'i2';
          SET boolRespSet = TRUE;
        ELSE
    
          -- find out if given interval value is valid ------------------------------------------------------
          -- (if not valid, an exception is thrown by WMQI) -------------------------------------------------
          DECLARE intvlTmp INTERVAL;
          DECLARE chTmp CHARACTER;
      
          SET chTmp = SUBSTRING(chWuIntvl FROM 1 FOR 3) || ' ' || SUBSTRING(chWuIntvl FROM 5);		     
          SET intvlTmp = CAST(chTmp AS INTERVAL DAY TO SECOND);
	END IF;
      ELSE
        -- Wakeup Time is specified -------------------------------------------------------------------------
        IF ((LENGTH(chWuTime) < 19) OR (LENGTH(chWuTime) > 26)) THEN 
          SET refResp.Completion.Code = 'Failed';
          SET refResp.Completion.Reason = '7';
          SET boolRespSet = TRUE;
        ELSE

          -- find out if given timestamp value is valid -----------------------------------------------------
          -- (if not valid, an exception is thrown by WMQI) -------------------------------------------------	
          DECLARE tsTmp TIMESTAMP;
          DECLARE chTmp CHARACTER;	

          SET chTmp = SUBSTRING(chWuTime FROM 1 FOR 10) || ' ' || SUBSTRING(chWuTime FROM 12);  	
          SET tsTmp = CAST(chTmp AS TIMESTAMP); 
        END IF;  
      END IF;
    END IF;
  END IF;
END IF;


-- Check if field UserData exists. If yes, check if its maximum length is 254. ------------------------------
IF ((boolRespSet = FALSE) AND (chUserData IS NOT NULL)) THEN
  IF (LENGTH(chUserData) > 254) THEN
    SET refResp.Completion.Code = 'Failed';
    SET refResp.Completion.Reason = '3';
    SET refResp.Completion.Parameter1 = 'UserData';
    SET refResp.Completion.Parameter2 = chUserData;
    SET refResp.Completion.Parameter3 = 254;
    SET refResp.Completion.Parameter3.(NameValue)dt = 'i2';
    SET refResp.Completion.Parameter4 = LENGTH(chUserData);
    SET refResp.Completion.Parameter4.(NameValue)dt = 'i2';
    SET boolRespSet = TRUE;
  END IF;
END IF;


-- Check if the field OU exists and its length is valid. ----------------------------------------------------
IF (boolRespSet = FALSE) THEN
  IF (chOu IS NULL) THEN
    SET refResp.Completion.Code = 'Failed';
    SET refResp.Completion.Reason = '1';
    SET refResp.Completion.Parameter1 = 'OU';
    SET boolRespSet = TRUE;    
  ELSE
    IF (LENGTH(chOu) = 0) THEN
      SET refResp.Completion.Code = 'Failed';
      SET refResp.Completion.Reason = '2';
      SET refResp.Completion.Parameter1 = 'OU';
      SET boolRespSet = TRUE; 
    ELSE
      IF (LENGTH(chOu) > 8) THEN
        SET refResp.Completion.Code = 'Failed';
        SET refResp.Completion.Reason = '3';
        SET refResp.Completion.Parameter1 = 'OU';
        SET refResp.Completion.Parameter2 = chOu;
        SET refResp.Completion.Parameter3 = 8;
        SET refResp.Completion.Parameter3.(NameValue)dt = 'i2';
        SET refResp.Completion.Parameter4 = LENGTH(chOu);
        SET refResp.Completion.Parameter4.(NameValue)dt = 'i2';
        SET boolRespSet = TRUE;
      END IF;
    END IF;
  END IF;
END IF;


-------------------------------------------------------------------------------------------------------------
-- If an mandatory parameter was wrong, a response has been created and the value boolRespSet has
-- been set to TRUE.
-- If all checked parameters were valid (boolRespSet = FALSE), the response section has to be removed 
-- from the outgoing message.
-------------------------------------------------------------------------------------------------------------

IF (boolRespSet = FALSE) THEN
  SET pOutFunction.DniTimer."Set".Response = NULL;
END IF;


RETURN true;
END;

