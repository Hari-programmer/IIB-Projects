CREATE COMPUTE MODULE Position_Function_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		
		DECLARE EV REFERENCE TO Environment.Variable;
        CREATE LASTCHILD OF EV.Req DOMAIN 'JSON' PARSE (InputRoot.BLOB.BLOB);
      
      SET OutputRoot.JSON.Data.position=POSITION('r' IN EV.Req.JSON.Data.Name);
       
      --SET OutputRoot.JSON.Data.position6=POSITION('8' IN EV.Req.JSON.Data.Phn );
      
      
     -- SET OutputRoot.JSON.Data.position6=POSITION('r' IN EV.Req.JSON.Data.Phn);
      --SET OutputRoot.JSON.Data.position6=POSITION(null IN EV.Req.JSON.Data.Phn);
      -- Its goes to navigation exception weather we use 'null' or 'charecter'
      
      SET OutputRoot.JSON.Data.position1=POSITION('P' IN EV.Req.JSON.Data.Name FROM 5 );
      
      SET OutputRoot.JSON.Data.position2=POSITION('Ha' IN EV.Req.JSON.Data.Name REPEAT 2);
      
      SET OutputRoot.JSON.Data.position3=POSITION('Pa' IN EV.Req.JSON.Data.Name FROM 6 REPEAT 3 );
      
      
       SET OutputRoot.JSON.Data.position4=POSITION('Ha' IN EV.Req.JSON.Data.Name REPEAT -2 );
       
        SET OutputRoot.JSON.Data.position5=POSITION('Pa' IN EV.Req.JSON.Data.Name FROM 5 REPEAT -1 );
        
        
        SET OutputRoot.JSON.Data.position=POSITION('r' IN EV.Req.JSON.Data.Name1);
        
        --If any parameter is null the resuly should be null
		
		
		
		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;