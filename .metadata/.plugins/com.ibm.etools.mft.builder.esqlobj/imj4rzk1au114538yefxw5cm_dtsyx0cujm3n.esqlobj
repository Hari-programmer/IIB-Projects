CREATE COMPUTE MODULE Soap_Req_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		--DECLARE EV REFERENCE TO Environment.Variables;
		
		CREATE LASTCHILD OF InputRoot DOMAIN 'SOAP';
		
		DECLARE EV REFERENCE TO Environment.Variables;
		CREATE LASTCHILD OF EV.Req DOMAIN 'JSON' PARSE(InputRoot.BLOB.BLOB);
		
		 IF      InputRoot.SOAP.Body.ns:Employee_Details.Emp_Id  = EV.Req.JSON.Data.Id  THEN
		    SET OutputRoot.SOAP.Body.ns:Employee_Details.Emp_Id  = EV.Req.JSON.Data.Id ;
		    
		 ELSEIF InputRoot.SOAP.Body.ns:Employee_Details.Emp_Id   = EV.Req.JSON.Data.Id1 THEN
			SET OutputRoot.SOAP.Body.ns:Employee_Details.Emp_Id  = EV.Req.JSON.Data.Id1 ;
			
		 ELSEIF OutputRoot.SOAP.Body.ns:Employee_Details.Emp_Id  = EV.Req.JSON.Data.Id2   THEN
			SET OutputRoot.SOAP.Body.ns:Employee_Details.Emp_Id  = EV.Req.JSON.Data.Id2 ;
			
		 ELSEIF OutputRoot.SOAP.Body.ns:Employee_Details.Emp_Id  = EV.Req.JSON.Data.Id3   THEN
			SET OutputRoot.SOAP.Body.ns:Employee_Details.Emp_Id  = EV.Req.JSON.Data.Id3 ;
			
		ELSE
			
		SET OutputRoot.SOAP.Body.ns:Employee_Details.Emp_Id.ERROR ='Inavalid Name';
			
		END IF;
		
		
		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;