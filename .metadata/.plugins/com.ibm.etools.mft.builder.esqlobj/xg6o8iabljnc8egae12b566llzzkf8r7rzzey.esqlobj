/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		
		DECLARE EV REFERENCE TO Environment.Variables;
		CREATE LASTCHILD OF EV.Req DOMAIN 'JSON' PARSE(InputRoot.BLOB.BLOB);
		
		
		SET OutputRoot.JSON.Data.Coalesce=COALESCE(EV.Req.JSON.Data.Name,NULL);
		
		--return Hari
		
		SET OutputRoot.JSON.Data.Coalesce1=COALESCE(EV.Req.JSON.Data.Phn,'Priya');
		
		--returns first parameter
		
		SET OutputRoot.JSON.Data.Coalesce2=COALESCE(EV.Req.JSON.Data.city,'Yanam');
		
		--return second parameter
		
		SET OutputRoot.JSON.Data.Coalesce3 = COALESCE(EV.Req.JSON.Data.Address,NULL);
		
		-- weather both are null nothing will displayed--- return nothing 
		
		SET OutputRoot.JSON.Data.Coalesce4 = COALESCE(EV.Req.JSON.Data.Name1,'Hari');
		
		-- fisrt one there is no data only '' not execute second parameter -- its returns nothing 
		
		
		SET OutputRoot.JSON.Data.Coalesce4 = COALESCE(EV.Req.JSON.Data.Name1,EV.Req.JSON.Data.Address,EV.Req.JSON.Data.city,EV.Req.JSON.Data.Name);
		
		
		
		IF COALESCE(EV.Req.JSON.Data.Name,1)='Hari' THEN
			
			SET OutputRoot.JSON.Data.phn=COALESCE(EV.Req.JSON.Data.Phn,null);
			
		ELSEIF COALESCE(EV.Req.JSON.Data.Name,2)='Priya' THEN
			
			SET  OutputRoot.JSON.Data.city=COALESCE(EV.Req.JSON.Data.city,null);
		ELSE
				
			SET OutputRoot.JSON.Data.Error='Invalid';
	
			
		END IF;
		
	
		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
