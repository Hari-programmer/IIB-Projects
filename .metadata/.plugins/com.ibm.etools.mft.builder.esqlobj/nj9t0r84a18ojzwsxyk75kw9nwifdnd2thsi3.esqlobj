CREATE COMPUTE MODULE Convert_char_Compute2
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		DECLARE i INTEGER 1;
		FOR LRef AS InputLocalEnvironment.DFDL.InputCSV.record[] DO
 
            SET OutputRoot.DFDL.OutputCSV.record[i].ID         = LRef.ID;	
			SET OutputRoot.DFDL.OutputCSV.record[i].ROW_ID     = LRef.ROW_ID;	
			SET OutputRoot.DFDL.OutputCSV.record[i].EXTERNALID = LRef.EXTERNALID;	
			SET OutputRoot.DFDL.OutputCSV.record[i].STORETIME  = LRef.STORETIME;	
			SET OutputRoot.DFDL.OutputCSV.record[i].OU         = LRef.OU;	
			SET OutputRoot.DFDL.OutputCSV.record[i].ROUTINGREQ = LRef.ROUTINGREQ;	
			SET OutputRoot.DFDL.OutputCSV.record[i].MQHEADERENC = LRef.MQHEADERENC;
			SET OutputRoot.DFDL.OutputCSV.record[i].MSGTYPE    = LRef.MSGTYPE;
			SET OutputRoot.DFDL.OutputCSV.record[i].DIRECTION  = LRef.DIRECTION;
			SET OutputRoot.DFDL.OutputCSV.record[i].QUEUETYPE  = LRef.QUEUETYPE;
			SET OutputRoot.DFDL.OutputCSV.record[i].LOCKTIME   = LRef.LOCKTIME;
			SET OutputRoot.DFDL.OutputCSV.record[i].POSSIBLEDUPLICATE = LRef.POSSIBLEDUPLICATE;
            SET OutputRoot.DFDL.OutputCSV.record[i].MQHEADER    = LRef.MQHEADER;
            SET OutputRoot.DFDL.OutputCSV.record[i].COMIBMDNI   = LRef.COMIBMDNI;
            SET OutputRoot.DFDL.OutputCSV.record[i].PAYLOAD     = LRef.PAYLOAD;
            SET OutputRoot.DFDL.OutputCSV.record[i].MSGDOMAIN   = LRef.MSGDOMAIN;
			SET OutputRoot.DFDL.OutputCSV.record[i].QUEUE       = LRef.QUEUE;
			SET OutputRoot.DFDL.OutputCSV.record[i].LOCALADDRESS = LRef.LOCALADDRESS;
			SET OutputRoot.DFDL.OutputCSV.record[i].REMOTEADDRESS = LRef.REMOTEADDRESS;
			SET OutputRoot.DFDL.OutputCSV.record[i].LOCKUSER    = LRef.LOCKUSER;
			SET OutputRoot.DFDL.OutputCSV.record[i].LASTCHGUSER = LRef.LASTCHGUSER;
			SET OutputRoot.DFDL.OutputCSV.record[1].MTFIN       = Ref.MTFIN;
--			
		END FOR;
		
		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;